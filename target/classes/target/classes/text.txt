Написать любом языке программирования, в которой идёт со следующими геометрическими фигурами:
1. Треугольник
2. Квадрат
3. Прямоугольник.
4. Круг
В программе имеется массив фигур, с которым можно сделать следующие операции:
1. Добавить новую фигуру
2. Посчитать периметр у всех фигур
3. Посчитать площадь у всех фигур
Для фигуры использовать базовый абстрактный класс фигуры,
у которого есть методы посчитать периметр и посчитать площадь фигуры.
Массив фигур в программе должен быть представлен как массив объектов этого базового класса.
Массив фигур должен создаваться и вся работа с ним идёт внутри main.
При создании фигур необходимо осуществлять проверку входных данных на возможность создания данной фигуры
и в случае ошибки выдавать соответствующие сообщения.

abstact class figure -> треугольник(есть стороны)
                -> квадрат (есть стороны)
                ->круг (нет сторон)
                ->прямоугольник(есть стороны)
методы figure\




S	SRP[5]
Принцип единственной ответственности (single responsibility principle)
Для каждого класса должно быть определено единственное назначение. Все ресурсы, необходимые для его осуществления,
 должны быть инкапсулированы в этот класс и подчинены только этой задаче.
O	OCP[6]
Принцип открытости/закрытости (open-closed principle)
«программные сущности … должны быть открыты для расширения, но закрыты для модификации».
L	LSP[7]
Принцип подстановки Лисков (Liskov substitution principle)
«функции, которые используют базовый тип, должны иметь возможность использовать подтипы базового типа не зная об этом». См. также контрактное программирование.
I	ISP[8]
Принцип разделения интерфейса (interface segregation principle)
«много интерфейсов, специально предназначенных для клиентов, лучше, чем один интерфейс общего назначения»[9].
D	DIP[10]
Принцип инверсии зависимостей (dependency inversion principle)
«Зависимость на Абстракциях. Нет зависимости на что-то конкретное»[9].


Пенриметры
квадрат сторона*4
прямоугольник (сторона+2сторона)*2
треугольник сторона*3 - равносторонний



